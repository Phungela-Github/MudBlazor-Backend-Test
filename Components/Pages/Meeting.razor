@page "/meeting"
@inject IDialogService DialogService
@using MudBlazor
@inject ISnackbar Snackbar

<MudContainer >

<MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mt-4">
    <MudItem xs="12" sm="6" md="6" lg="5">
        <MudCard>
            
            <MudCardContent>
                <MudDatePicker PickerVariant="PickerVariant.Static" Color="Color.Success" Rounded="true" @bind-Date="SelectedDate"/>
            </MudCardContent>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenMeetingDialog"> 
                Set Up Meeting
            </MudButton>
        <MudCardActions>
            <MudText Typo="Typo.subtitle2">Selected Date: @SelectedDate?.ToShortDateString()</MudText>
        </MudCardActions>
            
        </MudCard>
    </MudItem>
    <!-- Scrollable Card -->
    <MudItem xs="12" sm="6" md="6" lg="5">
        <MudCard Style="height: 400px; overflow-y: auto;">
            <MudCardHeader>
                <MudText Typo="Typo.h6">Invites</MudText>
            </MudCardHeader>
            <MudCardContent>
                @for (int i = 1; i <= 10; i++)
                {
                    <MudCard Class="mb-2">
                        <MudCardContent>
                            <MudText>Meeting Details</MudText>
                            <MudText>Date - Test Date</MudText>
                            <MudText>Time - 08:00 to 12:00 </MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Outlined" Color="Color.Secondary">Accept</MudButton>
                            <MudButton Variant="Variant.Outlined" Color="Color.Secondary">Reject</MudButton>
                        </MudCardActions>
                    </MudCard>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>
</MudContainer>

<h3>My Meetings</h3>
<MudSimpleTable Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Style="overflow-x: auto;">
    <thead>
        <tr>
            <th>ID</th>
            <th>Header</th>
            <th>Date</th>
            <th>Start Time</th>
            <th>End Time</th>
            <th>Meeting Pack</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
            <tr>
                <td>Test</td>
                <td>Test</td>
                <td>Test</td>
                <td>Test</td>
                <td>Test</td>
                <td><MudIconButton Icon="@Icons.Material.Filled.FileDownload" Color="Color.Primary" /></td>
                <td>
                <MudButton Color="Color.Primary" Variant="Variant.Outlined">Edit</MudButton>
                <MudButton Color="Color.Warning" Variant="Variant.Outlined">Delete</MudButton>
                <!--<MudButton Color="Color.Secondary" Variant="Variant.Outlined">Decline</MudButton> -->
                </td>
            </tr>
    </tbody>
</MudSimpleTable>
<MudToolBar>
    <MudSwitch @bind-Value="hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Value="dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Value="striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Value="bordered" Color="Color.Warning">Bordered</MudSwitch>
</MudToolBar>


@code {
    private DateTime? SelectedDate { get; set; } = DateTime.Today;
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;

    private async Task OpenMeetingDialog()
    {
        var parameters = new DialogParameters
        {
            { "SelectedDate", SelectedDate }
        };

        var options = new DialogOptions { CloseButton = true, FullWidth = false };

        var dialog = DialogService.Show<MeetingDialog>("Set Up Meeting", parameters, options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            Snackbar.Add($"Meeting scheduled successfully for {SelectedDate?.ToShortDateString()}.", Severity.Success);
        }
        else
        {
            Snackbar.Add("Meeting setup was cancelled.", Severity.Info);
        }
    }
    
}
<style>
    .custom-dialog {
        width: 600px !important; /* Set a specific width */
        max-width: 90%; /* Prevent overflow on small screens */
    }
</style>
